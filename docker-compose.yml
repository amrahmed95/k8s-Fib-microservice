services:
  postgres:
    image: postgres:15.14-alpine3.21
    container_name: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine3.22
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  api:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    volumes:
      - /usr/app/node_modules
      - ./server:/usr/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PGUSER=postgres
      - PGHOST=postgres
      - PGDATABASE=postgres
      - PGPASSWORD=password
      - PGPORT=5432
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  client:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    volumes:
      - /usr/app/node_modules
      - ./client:/usr/app
    restart: unless-stopped

  worker:
    build:
      context: ./worker
      dockerfile: Dockerfile.dev
    volumes:
      - /usr/app/node_modules
      - ./worker:/usr/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy

  nginx:
    restart: always
    build:
      context: ./nginx
      dockerfile: Dockerfile.dev
    ports:
      - "3050:80"
    depends_on:
      - api
      - client

volumes:
  pgdata:
